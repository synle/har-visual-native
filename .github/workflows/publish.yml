name: Publish

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 16
  APP_PACKAGE_NAME: Har-Visual-Native

jobs:
  publish_mac:
    runs-on: macos-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Package OSX
        run: |
          npm exec electron-builder -- --publish=never --mac

      - name: Renames arm64.dmg
        run: |
          mv ./release/build/*-arm64.dmg "./$APP_PACKAGE_NAME-arm64.dmg"

      - name: Renames intel.dmg
        run: |
          mv ./release/build/*.dmg "./$APP_PACKAGE_NAME-intel.dmg"

      - name: Upload arm64.dmg
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-arm64.dmg"
          path: "./${{env.APP_PACKAGE_NAME}}-arm64.dmg"

      - name: Upload intel.dmg
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-intel.dmg"
          path: "./${{env.APP_PACKAGE_NAME}}-intel.dmg"

  publish_windows:
    runs-on: macos-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Package Windows
        run: |
          npm exec electron-builder -- --publish=never --win

      - name: Renames setup.exe
        run: |
          mv ./release/build/*Setup*.exe "./$APP_PACKAGE_NAME Setup.exe"

      - name: Upload setup.exe
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-setup.exe"
          path: "./${{env.APP_PACKAGE_NAME}} Setup.exe"

  publish_linux:
    runs-on: macos-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Package Linux
        continue-on-error: true
        run: |
          npm exec electron-builder -- --publish=never --linux

      - name: Renames AppImage
        run: |
          mv ./release/build/*.AppImage "./$APP_PACKAGE_NAME.AppImage"

      - name: Renames amd64.deb
        run: |
          mv ./release/build/*.deb "./$APP_PACKAGE_NAME-amd64.deb"

      - name: Renames pacman
        run: |
          mv ./release/build/*.pacman "./$APP_PACKAGE_NAME.pacman"

      - name: Renames snap
        run: |
          mv ./release/build/*.snap "./$APP_PACKAGE_NAME.snap"

      - name: Renames rpm
        continue-on-error: true
        run: |
          mv ./release/build/*.rpm "./$APP_PACKAGE_NAME.rpm"

      - name: Upload AppImage
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-AppImage"
          path: "./${{env.APP_PACKAGE_NAME}}.AppImage"

      - name: Upload amd64.deb
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-amd64.deb"
          path: "./${{env.APP_PACKAGE_NAME}}-amd64.deb"

      - name: Upload pacman
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-pacman"
          path: "./${{env.APP_PACKAGE_NAME}}.pacman"

      - name: Upload snap
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-snap"
          path: "./${{env.APP_PACKAGE_NAME}}.snap"

      - name: Upload rpm
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-rpm"
          path: "./${{env.APP_PACKAGE_NAME}}.rpm"

  publish_linux_rpm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Package Linux
        continue-on-error: true
        run: |
          npm exec electron-builder -- --publish=never --linux --target=rpm

      - name: Renames rpm
        run: |
          mv ./release/build/*.rpm "./$APP_PACKAGE_NAME.rpm"

      - name: Upload rpm
        uses: actions/upload-artifact@v3
        with:
          name: "${{env.APP_PACKAGE_NAME}}-rpm"
          path: "./${{env.APP_PACKAGE_NAME}}.rpm"
